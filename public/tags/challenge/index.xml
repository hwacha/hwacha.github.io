<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Challenge on Bill Marcy</title>
    <link>https://hwacha.github.io/tags/challenge/</link>
    <description>Recent content in Challenge on Bill Marcy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Mar 2025 15:23:36 -0700</lastBuildDate>
    <atom:link href="https://hwacha.github.io/tags/challenge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playtree Spotify Integration</title>
      <link>https://hwacha.github.io/posts/playtree-spotify-integration/</link>
      <pubDate>Wed, 19 Mar 2025 15:23:36 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-spotify-integration/</guid>
      <description>&lt;p&gt;Playtree uses the &lt;a href=&#34;https://developer.spotify.com/documentation/web-api&#34;&gt;Spotify API&lt;/a&gt; to search for tracks on Spotify, and to play music within Playtree. It also makes use of the &lt;a href=&#34;https://developer.spotify.com/documentation/web-playback-sdk&#34;&gt;Spotify Web Playback SDK&lt;/a&gt;, which allows for Spotify playback to occur within the app itself, and for certain events pertaining to Spotify playback to be reported real-time to the application.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;authentication&#34;&gt;Authentication&lt;/h3&gt;&#xA;&lt;p&gt;Spotify API calls must be authenticated, and so I use the Authorization Code flow to obtain an access token from the server side. I need to use the access token on both the client and the server. Web Playback SDK can only be used client-side, and my server uses Spotify tokens as a proxy for the user&amp;rsquo;s identity within the site. Access tokens and refresh tokens are stored as cookies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Player Logic</title>
      <link>https://hwacha.github.io/posts/playtree-player-logic/</link>
      <pubDate>Wed, 19 Mar 2025 15:09:52 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-player-logic/</guid>
      <description>&lt;p&gt;The rules that govern playback on a playtree are rather complicated. The user can play and pause audio, skip forward, go back to previously played songs, which must be memoized when playback randomly branches. Additionally, a user can switch between playheads, which loads/reloads a full playback context.&lt;/p&gt;&#xA;&lt;p&gt;I use a &lt;a href=&#34;https://react.dev/reference/react/useReducer&#34;&gt;reducer&lt;/a&gt; to handle playback logic. A reducer is a pure function which takes a state and an action and returns a state. Actions are dispatched as a response to UI events and external state changes, prompting an internal state update according to the reducer function. This provides a clean way to manage the logic of complex state updates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Editor UI</title>
      <link>https://hwacha.github.io/posts/playtree-editor-ui/</link>
      <pubDate>Wed, 19 Mar 2025 14:36:22 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-editor-ui/</guid>
      <description>&lt;h3 id=&#34;synchronizing-playtree-data-with-react-flow-ui&#34;&gt;Synchronizing Playtree data with React Flow UI&lt;/h3&gt;&#xA;&lt;p&gt;I wanted to create an intuitive, fun UI for making and visualizing complex playtrees. Playtrees are graph structures, so I used &lt;a href=&#34;https://reactflow.dev/&#34;&gt;React Flow&lt;/a&gt;, a library for rendering and interacting with graphs. The editor displays highly customized nodes and edges using React Flow. I&amp;rsquo;ll call these nodes and edges that appear in the editor&amp;rsquo;s UI &amp;ldquo;flow nodes&amp;rdquo; and &amp;ldquo;flow edges.&amp;rdquo; These flow nodes and flow edges are distinct from playnodes and playedges, which are represented in data within a playtree data structure, which exists as a JSON file when stored on the server, and a Typescript object when used in the editor or player component on the Playtree client. Even so, the custom flow nodes and flow edges used in the editor UI do depend on the data with a playnode and playedge.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
