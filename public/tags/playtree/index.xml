<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Playtree on Bill Marcy</title>
    <link>https://hwacha.github.io/tags/playtree/</link>
    <description>Recent content in Playtree on Bill Marcy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Mar 2025 19:34:08 -0700</lastBuildDate>
    <atom:link href="https://hwacha.github.io/tags/playtree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playtree Playscopes Explained</title>
      <link>https://hwacha.github.io/posts/playtree-playscopes-explained/</link>
      <pubDate>Sat, 22 Mar 2025 19:34:08 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-playscopes-explained/</guid>
      <description>&lt;h3 id=&#34;shuffle&#34;&gt;Shuffle&lt;/h3&gt;&#xA;&lt;p&gt;You can make a shuffle playlist in Playtree with a selector:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;90s-shuffle.png&#34; alt=&#34;medium&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Each song is limited to one play, and the node is set to repeat five times. This means the selector will play all five songs in a random order, just like a shuffle playlist.&lt;/p&gt;&#xA;&lt;p&gt;But, by default, the counters that manage limiting plays during playback are &lt;em&gt;global&lt;/em&gt;: if you go back to this playnode later, all of the songs will still be limited.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Playnode Types Explained</title>
      <link>https://hwacha.github.io/posts/playtree-playnode-types-explained/</link>
      <pubDate>Sat, 22 Mar 2025 14:52:03 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-playnode-types-explained/</guid>
      <description>&lt;p&gt;Up to this point, playnodes have contained a single song. In practice, though, it would be tedious to have to make a playnode and playedges for every single song you want in a playtree. The playnodes in the Playtree app are containers for any number of songs. Because playnodes can handle collections of songs, it opens the possibility of adding whole playlists into a playnode.&lt;/p&gt;&#xA;&lt;p&gt;Playnodes come in two types: &lt;strong&gt;sequencers&lt;/strong&gt; and &lt;strong&gt;selectors&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Shares and Priority Explained</title>
      <link>https://hwacha.github.io/posts/playtree-shares-and-priority-explained/</link>
      <pubDate>Fri, 21 Mar 2025 22:10:46 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-shares-and-priority-explained/</guid>
      <description>&lt;p&gt;In this post I&amp;rsquo;ll explain &lt;em&gt;shares&lt;/em&gt; and &lt;em&gt;priority&lt;/em&gt;, parameters that apply to playedges. It presumes a familiarity with basic probability and the concept of mathematical limits.&lt;/p&gt;&#xA;&lt;p&gt;We have to refer to incoming edges a lot, so I&amp;rsquo;ll use &amp;ldquo;=&amp;gt; playnode&amp;rdquo; as a shorthand for talking about the playedge that leads into the named playnode.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;shares&#34;&gt;Shares&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;days-no-shares.png&#34; alt=&#34;alt&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This playtree will play &amp;ldquo;One Week,&amp;rdquo; and then randomly select one of the day songs. &amp;ldquo;One Week&amp;rdquo; has seven outgoing playedges, and so, by default, each one has a &lt;code&gt;1/7&lt;/code&gt; chance of being selected.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Limits Explained</title>
      <link>https://hwacha.github.io/posts/playtree-limits-explained/</link>
      <pubDate>Fri, 21 Mar 2025 19:44:56 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-limits-explained/</guid>
      <description>&lt;p&gt;In this post, I&amp;rsquo;ll explain how limits work in Playtree.&lt;/p&gt;&#xA;&lt;h3 id=&#34;limiting-playedges&#34;&gt;Limiting Playedges&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;three-birds-no-limit.png&#34; alt=&#34;medium&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This playtree will start at &amp;ldquo;Three Little Birds,&amp;rdquo; play one of &amp;ldquo;Blackbird,&amp;rdquo; &amp;ldquo;Free Bird,&amp;rdquo; or &amp;ldquo;Surfin&amp;rsquo; Bird,&amp;rdquo; play &amp;ldquo;No Birds,&amp;rdquo; and then repeat forever. In case you&amp;rsquo;re not familiar with these tunes, &amp;ldquo;Free Bird&amp;rdquo; is over 9 minutes long, and &amp;ldquo;Surfin&amp;rsquo; Bird&amp;rdquo; is best enjoyed in moderation. You might want to set a limit on how many times those songs can be selected.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Structure Explained</title>
      <link>https://hwacha.github.io/posts/playtree-structure-explained/</link>
      <pubDate>Thu, 20 Mar 2025 12:28:54 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-structure-explained/</guid>
      <description>&lt;p&gt;In this article, I&amp;rsquo;ll explain what a playtree structure is. A basic familiarity with sequences and cycles, trees, graphs, and linked lists is assumed.&lt;/p&gt;&#xA;&lt;p&gt;There&amp;rsquo;s no doubt you&amp;rsquo;re familiar with playlists. Let&amp;rsquo;s take an example of one on Spotify:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;small-talk-spotify-playlist.png&#34; alt=&#34;small&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you play this playlist without shuffle or loop toggled on, it will start playing &amp;ldquo;Hello.&amp;rdquo; After &amp;ldquo;Hello&amp;rdquo; finishes, &amp;ldquo;What&amp;rsquo;s Up?&amp;rdquo; will start playing. Then, &amp;ldquo;I&amp;rsquo;m Alright.&amp;rdquo; This will carry on until &amp;ldquo;See You Later, Alligator,&amp;rdquo; the last song in the playlist, finishes. After that, playback stops. We can model the playlist&amp;rsquo;s playback behavior with the following directed graph:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Spotify Integration</title>
      <link>https://hwacha.github.io/posts/playtree-spotify-integration.png/</link>
      <pubDate>Wed, 19 Mar 2025 15:23:36 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-spotify-integration.png/</guid>
      <description>&lt;p&gt;Playtree uses the &lt;a href=&#34;https://developer.spotify.com/documentation/web-api&#34;&gt;Spotify API&lt;/a&gt; to search for tracks on Spotify, and to play music within Playtree. It also makes use of the &lt;a href=&#34;https://developer.spotify.com/documentation/web-playback-sdk&#34;&gt;Spotify Web Playback SDK&lt;/a&gt;, which allows for Spotify playback to occur within the app itself, and for certain events pertaining to Spotify playback to be reported real-time to the application.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;authentication&#34;&gt;Authentication&lt;/h3&gt;&#xA;&lt;p&gt;Spotify API calls must be authenticated, and so I use the Authorization Code flow to obtain an access token from the server side. I need to use the access token on both the client and the server. Web Playback SDK can only be used client-side, and my server uses Spotify tokens as a proxy for the user&amp;rsquo;s identity within the site. Access tokens and refresh tokens are stored as cookies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Player Logic</title>
      <link>https://hwacha.github.io/posts/playtree-player-logic/</link>
      <pubDate>Wed, 19 Mar 2025 15:09:52 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-player-logic/</guid>
      <description>&lt;p&gt;The rules that govern playback on a playtree are rather complicated. The user can play and pause audio, skip forward, go back to previously played songs, which must be memoized when playback randomly branches. Additionally, a user can switch between playheads, which loads/reloads a full playback context.&lt;/p&gt;&#xA;&lt;p&gt;I use a &lt;a href=&#34;https://react.dev/reference/react/useReducer&#34;&gt;reducer&lt;/a&gt; to handle playback logic. A reducer is a pure function which takes a state and an action and returns a state. Actions are dispatched as a response to UI events and external state changes, prompting an internal state update according to the reducer function. This provides a clean way to manage the logic of complex state updates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Editor UI</title>
      <link>https://hwacha.github.io/posts/playtree-editor-ui/</link>
      <pubDate>Wed, 19 Mar 2025 14:36:22 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-editor-ui/</guid>
      <description>&lt;h3 id=&#34;synchronizing-playtree-data-with-react-flow-ui&#34;&gt;Synchronizing Playtree data with React Flow UI&lt;/h3&gt;&#xA;&lt;p&gt;I wanted to create an intuitive, fun UI for making and visualizing complex playtrees. Playtrees are graph structures, so I used &lt;a href=&#34;https://reactflow.dev/&#34;&gt;React Flow&lt;/a&gt;, a library for rendering and interacting with graphs. The editor displays highly customized nodes and edges using React Flow. I&amp;rsquo;ll call these nodes and edges that appear in the editor&amp;rsquo;s UI &amp;ldquo;flow nodes&amp;rdquo; and &amp;ldquo;flow edges.&amp;rdquo; These flow nodes and flow edges are distinct from playnodes and playedges, which are represented in data within a playtree data structure, which exists as a JSON file when stored on the server, and a Typescript object when used in the editor or player component on the Playtree client. Even so, the custom flow nodes and flow edges used in the editor UI do depend on the data with a playnode and playedge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playtree Technical Overview</title>
      <link>https://hwacha.github.io/posts/playtree-technical-overview/</link>
      <pubDate>Tue, 18 Mar 2025 12:55:36 -0700</pubDate>
      <guid>https://hwacha.github.io/posts/playtree-technical-overview/</guid>
      <description>&lt;p&gt;Playtree is an application for making and listening to &lt;em&gt;playtrees&lt;/em&gt;, which are like playlists, except that playback can branch, loop, and start at multiple entry points. You can try out playtree &lt;a href=&#34;https://playtree.gdn&#34;&gt;here&lt;/a&gt;. In this post, I&amp;rsquo;ll provide a broad overview of Playtree and its development.&lt;/p&gt;&#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://hwacha.github.io/posts/playtree-structure-explained/&#34;&gt;playtree explainers&lt;/a&gt; for a more in-depth explanation of playtrees.&lt;/p&gt;&#xA;&lt;h2 id=&#34;at-a-glance&#34;&gt;At a Glance&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;example-playtree.png&#34; alt=&#34;alt&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Playtree is a web application for creating custom playtrees, which are directed graphs. Playnodes contain songs to be played, and playedges define a path playback can follow.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
